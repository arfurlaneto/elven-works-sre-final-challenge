name: Frontend - Build & Deploy

on:
  push:
    branches:
      - homolog
      - main
      - master
    paths:
      - frontend/**
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    name: Build & Deploy
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache modules
        uses: actions/cache@v1
        id: yarn-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-
      - name: Use Node.js 10.x
        uses: actions/setup-node@v1
        with:
          node-version: 10.24.1
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Build
        run: yarn build

  deploy-staging:
    runs-on: ubuntu-latest
    needs: build
    name: Deploy Staging
    if: github.ref == 'refs/heads/staging'
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Deploy
        run: aws s3 sync ./build s3://${{ secrets.AWS_FRONTEND_BUCKET_NAME_STAGING }}

  deploy-production:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    needs: build
    name: Deploy Production
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Deploy
        run: aws s3 sync ./build s3://${{ secrets.AWS_FRONTEND_BUCKET_NAME_STAGING }}
